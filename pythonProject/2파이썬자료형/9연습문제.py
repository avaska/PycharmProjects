#연습문제

#문제1. 홍길동씨의 과목별 점수는 다음과 같다. 홍길동 씨의 평균 점수를 구해 보자.

#   과목      점수
#   국어      80
#   영어      75
#   수학      55
#Q1

print('-------------------------------------------')
a,b,c={80,75,55}
avg = (a+b+c)/3
print(avg)
print('-------------------------------------------')

#문제2. 자연수 13이 홀수 인지 짝수 인지 판별할 수 있는 방법에 대해 코드를 작성 해 보자.
#힌트) 나머지 연산자  % 를 사용하면 자연수의 홀수, 짝수를 쉽게 판별할 수 있다.
#어떤수를 2로 나누었을때의 나머지값이 1일 때는 홀수
#어떤수를 2로 나눈 나머지값이 2일 때는 짝수
#Q2
a=13
if(a%2 == 0):
    print("짝수")
else:
    print("홀수")
# print(a%2 == 0)
print('-------------------------------------------')


#문제3. 홍길동씨의 주민등록번호는 881120-1068234 이다.
#홍길동씨의 주민등록번호를 연월일 부분과 그뒤의 숫자 부분으로 나누어 출력해보자
#비어있는 란에 입력 하시오. 힌트)문자열 슬라이싱 기법을 사용해 보자.

# pin = "881120-1068234"
# yyyymmdd =
# num =
# print(   ) #연월일 부분 출력
# print(   ) #숫자 부분 출력
#Q3
pin = '881120-1068234'
bar = pin.find('-')
print(bar)
yyyymmdd = pin[0 : bar]
num = pin[bar+1 : ]
print(yyyymmdd)
print(num)
print('-------------------------------------------')


#문제4. 주민등록번호 뒷자리의 맨 첫번째 숫자는 성별을 나타낸다.
#주민번등록번호에서 성별을 나타내는 숫자를 출력 해 보자
#예) 881120-1068234 중에서 1을 출력
# pin = "881120-1068234"
# print(    )
#Q4
pin = "881120-1068234"
bar = pin.index('-')
print(bar)
sex = bar+1
print(pin[sex])
print('-------------------------------------------')



#문제5. 다음과 같은 문자열 a:b:c:d가 있다 문자열의 replace함수를 사용하여
# a#b#c#d로 바꿔서 출력해 보자.

# a = "a:b:c:d"
# b =
# print(b)
#Q5
test = "a:b:c:d"
# print(test)
print(test.replace(":","#"))
print('-------------------------------------------')


#문제6. [1,3,5,4,2]라는 리스트를  [5,4,3,2,1]리스트로 만들어 보자.
#힌트 리스트의 내장 함수를 사용해 보자.
# a = [1,3,5,4,2]
# a.                  #[1,2,3,4,5]로 변경
# a.                  #[5,4,3,2,1]로 변경
# print( )

#Q6
a = [1,3,5,4,2]
a.sort()
print(a)
a.reverse()
print(a)
print('-------------------------------------------')



# Q7
# ['Life', 'is', 'too', 'short'] 리스트를 Life is too short 문자열로 만들어 출력해 보자.
#
# ※ 문자열의 join 함수를 사용하면 리스트를 문자열로 쉽게 만들 수 있다.

a = ['Life', 'is', 'too', 'short']
b = " ".join(a)
print(b)


print('-------------------------------------------')
# Q8
# (1,2,3) 튜플에 값 4를 추가하여 (1,2,3,4)를 만들어 출력해 보자.
#
# ※ 더하기(+)를 사용해 보자.

a = (1,2,3)
print(id(a))
b = (4, )   #뒤에 콤마 포함해야 튜플 적용됨
c = a+b
print(c)
print(id(c))

print('-------------------------------------------')


# Q9
# 다음과 같은 딕셔너리 a가 있다.
#
# >>> a = dict()
# >>> a
# {}
# 다음 중 오류가 발생하는 경우를 고르고, 그 이유를 설명해 보자.
#
# a['name'] = 'python'
# a[('a',)] = 'python'
# a[[1]] = 'python'
# a[250] = 'python'

a = dict()
a['name'] = 'python'
a[('a',)] = 'python'
# a[[1]] = 'python'
a[250] = 'python'
print(a)

# 오류가 발생하는 이유는 딕셔너리의 키로는 변하는(mutable) 값을 사용할 수 없기 때문이다.
# 위 예에서 키로 사용된 [1]은 리스트이므로 변하는 값이다.
# 다른 예에서 키로 사용된 문자열, 튜플, 숫자는 변하지 않는(immutable) 값이므로 딕셔너리의 키로 사용이 가능하다.


print('-------------------------------------------')

# Q10
# 딕셔너리 a에서 'B'에 해당되는 값을 추출해 보자.
#
# >>> a = {'A':90, 'B':80, 'C':70}
# ※ 딕셔너리의 pop 함수를 사용해 보자.

a = {'A':90, 'B':80, 'C':70}
b = a.pop('B')
print(b)
print(a)

print('-------------------------------------------')


# Q11
# a 리스트에서 중복 숫자를 제거해 보자.
#
# >>> a = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5]
# ※ 집합 자료형의 요솟값이 중복될 수 없다는 특징을 사용해 보자.

a = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5]
print(a)

setA = set(a)
print(setA)

b = list(setA)
print(b)


print('-------------------------------------------')

# Q12
# 파이썬은 다음처럼 동일한 값에 여러 개의 변수를 선언할 수 있다.
# 다음과 같이 a, b 변수를 선언한 후
# a의 두 번째 요솟값을 변경하면 b 값은 어떻게 될까?
# 그리고 이런 결과가 오는 이유에 대해 설명해 보자.
#
# >>> a = b = [1, 2, 3]
# >>> a[1] = 4
# >>> print(b)

a = b = [1,2,3]
a[1] = 4
print(a)
print(b)


print('-------------------------------------------')